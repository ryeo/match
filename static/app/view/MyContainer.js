/*
 * File: app/view/MyContainer.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyContainer', {
    extend: 'Ext.Container',

    config: {
        itemId: 'container1',
        layout: {
            align: 'stretchmax',
            pack: 'center',
            type: 'vbox'
        },
        items: [
            {
                xtype: 'spacer',
                html: 'Movie Kiosk',
                itemId: 'space1'
            },
            {
                xtype: 'carousel',
                flex: 2,
                itemId: 'mycarousel',
                padding: '10px 10px 10px 10px',
                styleHtmlContent: true,
                width: '',
                items: [
                    {
                        xtype: 'image',
                        title: 'Toy Story 3',
                        cls: [
                            'Toy Story 3'
                        ],
                        src: 'http://content6.flixster.com/movie/11/13/43/11134356_pro.jpg'
                    },
                    {
                        xtype: 'image',
                        title: 'Ghost Protocol',
                        cls: [
                            'Mission Impossible Ghost Protocol'
                        ],
                        src: 'http://content9.flixster.com/movie/11/16/11/11161107_pro.jpg'
                    },
                    {
                        xtype: 'image',
                        title: 'Girl with Dragon Tattoo',
                        cls: [
                            'Girl with Dragon Tattoo'
                        ],
                        src: 'http://content8.flixster.com/movie/11/16/10/11161098_pro.jpg'
                    },
                    {
                        xtype: 'image',
                        title: 'Tintin',
                        cls: [
                            'Tintin'
                        ],
                        src: 'http://content6.flixster.com/movie/11/15/75/11157588_pro.jpg'
                    }
                ]
            },
            {
                xtype: 'spacer',
                html: ''
            }
        ],
        listeners: [
            {
                fn: 'onMycarouselActivate',
                event: 'activate',
                delegate: '#mycarousel'
            },
            {
                fn: 'onContainerActivate',
                event: 'activate'
            }
        ]
    },

    onMycarouselActivate: function(container, newActiveItem, oldActiveItem, options) {

        var pubnub = PUBNUB.init({
            publish_key   : 'demo',
            subscribe_key : 'demo',
            ssl           : false,
            origin        : 'pubsub.pubnub.com'
        });

        var current=container.getActiveItem();
        console.log(current.getItemId());

        console.log('ROB');

        /*
        pubnub.publish({
        channel : "robert",
        message  : { 
        name    : "chat_message",
        data    : {
        message : currHTML
        } 
        },
        callback : function(message) {
        console.log('Message Sent '+currHTML);
        }
        });
        */

        var counter=0
        setInterval(
        function () {

            var me = container;

            me.next();

            setTimeout(function(){
                console.log('Timeout Called After Delay');
                var active= me.getActiveItem();
                console.log(me.getActiveIndex());
                console.log(active.getItemId());
                var start = new Date();
                console.log(start);


                pubnub.publish({
                    channel : "robert",
                    message  : { 
                        data    : {
                            message : active.getCls(),
                            time    : start
                        } 
                    },
                    callback : function(message) {
                        console.log('Message Sent '+active.getCls());

                    }
                });



            }, 500);

            //var active= me.getActiveItem();
            //var color= active.getItemId();

            //active= me.getActiveItem();
            //console.log(me.getActiveIndex());
            //console.log(active.getItemId())

            /*
            pubnub.publish({
            channel : "robert",
            message  : { 
            name    : "chat_message",
            data    : {
            message : color
            } 
            },
            callback : function(message) {
            console.log('Message Sent '+color);
            }
            });
            */


            if (me.getActiveIndex() === me.getMaxItemIndex()) {
                me.setActiveItem(0);

            }


        }, 
        15000); // setInterval()


        //Set Alert
        pubnub.subscribe({
            channel  : "robert2",
            callback : function(message) { 
                console.log(message);
                var msg = message.data.message;

                if (msg=='Like'){
                    Ext.Msg.alert(' ', 'Great Movie!!', Ext.emptyFn);
                }
                if (msg=='Nope'){
                    Ext.Msg.alert(' ', 'Thumbs Down!!', Ext.emptyFn);
                }    
            },
            error    : function(e) {
                // Do not call subscribe() here!
                // PUBNUB will auto-reconnect.
                console.log(e);
            }
        });



        /*
        pubnub.subscribe({
        channel : "sencha_chat",
        message  : { 
        name    : "chat_message",
        data    : {
        message : 'test message',
        user    : 'user'
        } 
        },
        callback : function(message) {
        }
        });
        */

        /*
        pubnub.publish({
        channel : "sencha_chat",
        message  : { 
        name    : "chat_message",
        data    : {
        message : 'test message',
        user    : 'user'
        } 
        },
        callback : function(message) {
        console.log('Message Sent');
        }
        });
        */


        // preload prev chats 
        /*
        pubnub.history({
        channel : 'sencha_chat',
        limit : 5
        //messages[0] is the actual array you want 
    }, function(messages) {


        var messageArray=messages[0];
        console.log(messageArray.length);

        //for (var i = 0, j = messageArray.length; i < j; i += 1)  {
        // Queue is FIFO
        for (var i = messageArray.length - 1; i >= 0; i -= 1) {
            // do some stuff here
            var message = messageArray[i];

            console.log(message);
            /*
            if (message.text){

            }
            else if (message.name && (message.name == 'chat_message')){
            console.log('Message'+message.data.message); 
            }*/
            //    }

            //}); 



    },

    onContainerActivate: function(container, newActiveItem, oldActiveItem, options) {
        console.log('ROB');

        var current=container.getActiveItem();
        console.log(current.getItemId());

        current = container.setActiveItem(1);
        console.log('Active '+current.getItemId());
    }

});